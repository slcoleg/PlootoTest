// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AccountPayableDbContext))]
    [Migration("20231011164754_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Model.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VendorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Invoice", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            Description = "MSDN Subscription",
                            DueDate = new DateTime(2023, 10, 16, 12, 47, 54, 847, DateTimeKind.Local).AddTicks(8160),
                            IssuedDate = new DateTime(2023, 10, 10, 12, 47, 54, 847, DateTimeKind.Local).AddTicks(8131),
                            State = 0,
                            VendorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 123m,
                            Description = "Private hub",
                            DueDate = new DateTime(2023, 10, 23, 12, 47, 54, 847, DateTimeKind.Local).AddTicks(8164),
                            IssuedDate = new DateTime(2023, 9, 29, 12, 47, 54, 847, DateTimeKind.Local).AddTicks(8162),
                            State = 0,
                            VendorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 345m,
                            Description = "Office",
                            DueDate = new DateTime(2023, 10, 14, 12, 47, 54, 847, DateTimeKind.Local).AddTicks(8168),
                            IssuedDate = new DateTime(2023, 9, 20, 12, 47, 54, 847, DateTimeKind.Local).AddTicks(8166),
                            State = 0,
                            VendorId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 22.22m,
                            Description = "Visio",
                            DueDate = new DateTime(2023, 10, 12, 12, 47, 54, 847, DateTimeKind.Local).AddTicks(8173),
                            IssuedDate = new DateTime(2023, 9, 10, 12, 47, 54, 847, DateTimeKind.Local).AddTicks(8171),
                            State = 0,
                            VendorId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 12.11m,
                            Description = "Training",
                            DueDate = new DateTime(2023, 10, 18, 12, 47, 54, 847, DateTimeKind.Local).AddTicks(8176),
                            IssuedDate = new DateTime(2023, 10, 8, 12, 47, 54, 847, DateTimeKind.Local).AddTicks(8175),
                            State = 0,
                            VendorId = 3
                        });
                });

            modelBuilder.Entity("Model.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DebitDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VendorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Model.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vendor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Street West, Dallas",
                            Description = "Microsoft Subscriptions",
                            Name = "MSDN"
                        },
                        new
                        {
                            Id = 2,
                            Address = "4 Main Street, NY",
                            Description = "Repo",
                            Name = "Docker"
                        },
                        new
                        {
                            Id = 3,
                            Address = "5 Quieen Street, Boston",
                            Description = "Books",
                            Name = "EFCore"
                        },
                        new
                        {
                            Id = 4,
                            Address = "6 CoonWelth Avenue, Berlin",
                            Description = "Education",
                            Name = "Oracle"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
